This is a high level install instructions.

1. Go to raspberry.org and download the latest installer.  I chose to use the installer rather then downloading the
    image and burning it to the SD card.  It was a much easier method then downloading the image.
    I'm using the "Raspberry Pi OS (32-bit) with desktop".

2. Rotate the LCD screen.  I do this because of the way it's mounted in my droid.  You may not have to perform this step.
    In Terminal, type "sudo nano /boot/config.txt"
    Add the line "lcd_rotate=2" to the top of the file.
    Press CTRL+X
    Then Y
    Then Enter
    Then reboot

3. Go through setup process

4. Enable SSH, I2C, SSH Console

5. Enable VNC (Remote Desktop Connection)  I did this for programming and ease of file manipulation.  Not needed.  I use VNCViewer on my Mac to connect.

6.  I SSH'd into the pi but you can connect a KVM to it if you'd like.

7.  clone GitHub repository "https://github.com/greghulette/Astromech-Control.git"

8. Install Node.js  //this installs Node.js onto the raspbery pi
  sudo apt install nodejs

9. Install dependencies
   npm install

10. Make node.js run by default when booting
  mkdir ~/.config/lxsession
  cd ~/.config/lxsession
  mkdir/LXDE-pi
  cd LXDE-pi
  nano autostart

  Type the following in the autostart file:
  @lxpanel --profile LXDE-pi
  @pcmanfm --desktop --profile LXDE-pi
  @lxterminal --geometry=30x20%s --command "/home/pi/Astromech-Control/start.sh"
  @xscreensaver SHAPE_REPRESENTATION_RELATIONSHIP
  chromium-browser --start-fullscreen http://astromech.local/index-test.html


  create start.sh in Astromech folder
  nano start.sh

  type the following:
  cd /home/pi/Astromech-Control/
  sudo npm run dev

  Then make the start.sh file executable
  chmod +x start.sh

11. Install I2C
  npm install I2C

12. (OPTIONAL) Setup a AFP server on the raspbery pi to allow remote access to the files for development
    sudo apt install netatalk

    sudo /etc/netatalk/afp.config

      Add
      [Homes]
      basedir regex = /home

      [My AFP Volumes]
      path = /home

      Under Global
      guest account = pi

13. (OPTIONAL) Install Geany - Text editor for the code (Optional)

14. (OPTIONAL) install Arduino  (Optional)






Let's say I have 4 servos in the SMALL_PANEL_MASK group and I wanted to only send the 3rd one open, would it look something like this?
#define SMALL_PANEL        0x0001
#define MEDIUM_PANEL       0x0002
#define BIG_PANEL          0x0004
#define PIE_PANEL          0x0008
#define TOP_PIE_PANEL      0x0010


#define HOLO_HSERVO        0x1000
#define HOLO_VSERVO        0x2000

#define DOME_PANELS_MASK (SMALL_PANEL_MASK|MEDIUM_PANEL|BIG_PANEL)
#define PIE_PANELS_MASK         (PIE_PANEL)
#define ALL_DOME_PANELS_MASK (DOME_PANELS_MASK|PIE_PANELS_MASK|TOP_PIE_PANEL)
#define HOLO_SERVOS_MASK        (HOLO_HSERVO|HOLO_VSERVO)
#define MOVE_SPEED 250 
// Group ID is used by the ServoSequencer and some ServoDispatch functions to
// identify a group of servos.
//
//   Pin  Group ID,      Min,  Max
const ServoSettings servoSettings[] PROGMEM = {
     { 14,  700, 2400, SMALL_PANEL_ONE },  /* 0: door 4 /
     { 16,  700, 2400, SMALL_PANEL_TWO }   / 1: door 3 */
    { 17,  700, 2400, SMALL_PANEL_ONE },  /* 0: door 4 /
     { 18,  700, 2400, SMALL_PANEL_TWO }   / 1: door 3 */
};
{ 30,   B00100000, B00000000, B00000000, B00000000 },