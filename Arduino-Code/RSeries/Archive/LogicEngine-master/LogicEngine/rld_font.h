////////////////////////////////
///////////////////////////////
//   Scrolling Text Stuff   //
/////////////////////////////
////////////////////////////

// This is more challenging to see the characters, but way more efficient in terms of code space.
const unsigned char font5x4l [] PROGMEM = {      //Numeric Font Matrix (Arranged as 5x font data + 1x kerning data)
    B00000000, B00000000, B00000000, B00000000, 5, //Space (Char 0x20)
    B10000000, B10000000, B00000000, B10000000, 3, //!
    B10100000, B10100000, B00000000, B00000000, 4, //"
    B0, B0, B0, B0, 6, //#x
    B0, B0, B0, B0, 6, //$x
    B10010000, B00100000, B01000000, B10010000, 6, //%
    B0, B0, B0, B0, 6, //&
    B10000000, B10000000, B00000000, B00000000, 2, //'
    B01000000, B10000000, B10000000, B01000000, 3, //(
    B10000000, B01000000, B01000000, B10000000, 3, //)
    B01100000, B01100000, B00000000, B00000000, 4, //*
    B00100000, B01110000, B00100000, B00000000, 4, //+
    B00000000, B00000000, B01000000, B10000000, 3, //,
    B00000000, B11100000, B00000000, B00000000, 4, //-
    B00000000, B00000000, B00000000, B10000000, 3, //.
    B00010000, B00100000, B01000000, B10000000, 6, ///
    B01100000, B10100000, B10100000, B11000000, 5, //0
    B01000000, B11000000, B01000000, B01000000, 4, //1
    B01100000, B10100000, B01000000, B11100000, 5, //2   
    B01100000, B10110000, B01010000, B00100000, 5, //3
    B10100000, B10100000, B11100000, B00100000, 5, //4
    B01000000, B10110000, B11010000, B00100000, 5, //5
    B01000000, B10110000, B11010000, B01100000, 5, //6
    B11100000, B00100000, B01000000, B01000000, 5, //7
    B01100000, B10110000, B11010000, B01100000, 5, //8
    B01100000, B10100000, B11100000, B00100000, 5, //9
    B00000000, B10000000, B00000000, B10000000, 2, //:
    B00000000, B01000000, B00100000, B01000000, 4, //;
    B00000000, B00100000, B01000000, B11100000, 4, //<
    B00000000, 
    B11100000, 
    B00000000, 
    B11100000, 4, //=x
    B11100000, B01000000, B10000000, B00000000, 4, //>
    B01100000, B10100000, B01100000, B00010000, 5, //?
    B0, 
    B0, 
    B0, 
    B0, 6, //@
    B01100000, B10010000, B11110000, B10010000, 5, //A
    B10000000, B11100000, B10100000, B11000000, 4, //B    
    B01100000, B10000000, B10010000, B01100000, 5, //C
    B11000000, B10100000, B10100000, B11000000, 4, //D //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //E
    B11100000, B10000000, B11000000, B10000000, 4, //F
    B01100000, B10000000, B10100000, B01100000, 4, //G - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //H
    B11100000, B01000000, B01000000, B11100000, 4, //I
    B00100000, B00100000, B00100000, B11000000, 5, //J
    B10100000, B11000000, B11000000, B10100000, 4, //K
    B10000000, B10000000, B10000000, B11100000, 4, //L
    B10101000, B11111000, B10001000, B10001000, 6, //M - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //N
    B01100000, B10100000, B10100000, B11000000, 5, //O
    B01100000, B10100000, B11000000, B10000000, 4, //P
    B01100000, B10100000, B10100000, B11110000, 5, //Q
    B11100000, B10100000, B11000000, B10100000, 4, //R - coupld be tweaked I think,
    B01000000, B10110000, B11010000, B00100000, 5, //S
    B11100000, B01000000, B01000000, B01000000, 4, //T
    B10010000, B10010000, B10010000, B01100000, 5, //U
    B10010000, B10100000, B11000000, B10000000, 5, //V
    B10000100, B10101000, B11110000, B10100000, 6, //W
    B00101000, B00110000, B01100000, B10100000, 6, //X
    B01010000, B01100000, B01000000, B10000000, 4, //Y
    B11110000, B00100000, B01000000, B11110000, 5, //Z
    B11000000, B10000000, B10000000, B11000000, 3, //[x
    B10000000, B10000000, B01000000, B01000000, 3, //(Backward Slash)
    B11000000, B01000000, B01000000, B11000000, 3, //]
    B01000000, B11000000, B00000000, B00000000, 3, //^
    B00000000, B00000000, B00000000, B11100000, 4, //_
    B10000000, B10000000, B00000000, B00000000, 3, //`
    B01100000, B10010000, B11110000, B10010000, 5, //a
    B10000000, B11100000, B10100000, B11000000, 4, //b    
    B01100000, B10000000, B10010000, B01100000, 5, //c
    B11000000, B10100000, B10100000, B11000000, 4, //d //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //e
    B11100000, B10000000, B11000000, B10000000, 4, //f
    B01100000, B10000000, B10100000, B01100000, 4, //g - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //h
    B11100000, B01000000, B01000000, B11100000, 4, //i
    B00100000, B00100000, B00100000, B11000000, 5, //j
    B10100000, B11000000, B11000000, B10100000, 4, //k
    B10000000, B10000000, B10000000, B11100000, 4, //l
    B10101000, B11111000, B10001000, B10001000, 6, //m - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //n
    B01100000, B10100000, B10100000, B11000000, 5, //o
    B01100000, B10100000, B11000000, B10000000, 4, //p
    B01100000, B10100000, B10100000, B11110000, 5, //q
    B11100000, B10100000, B11000000, B10100000, 4, //r - coupld be tweaked I think,
    B01000000, B10110000, B11010000, B00100000, 5, //s
    B11100000, B01000000, B01000000, B01000000, 4, //t
    B10010000, B10010000, B10010000, B01100000, 5, //u
    B10010000, B10100000, B11000000, B10000000, 5, //v
    B10000100, B10101000, B11110000, B10100000, 6, //w
    B00101000, B00110000, B01100000, B10100000, 6, //x
    B01010000, B01100000, B01000000, B10000000, 4, //y
    B11110000, B00100000, B01000000, B11110000, 5, //z
    B01100000, B01000000, B11000000, B01100000, 4, //{
    B10000000, B10000000, B10000000, B10000000, 2, //|
    B11000000, B01100000, B01000000, B11000000, 4, //}x
    B01101000, B10110000, B00000000, B00000000, 5, //~x
    B0, B0, B0, B0, 2, // (Char 0x7F)
    B0, B0, B0, B0, 5 // smiley
};

const unsigned char font5x4r [] PROGMEM = {      //Numeric Font Matrix (Arranged as 5x font data + 1x kerning data)
    B00000000, B00000000, B00000000, B00000000, 5, //Space (Char 0x20)
    B10000000, B10000000, B00000000, B10000000, 3, //!
    B10100000, B10100000, B00000000, B00000000, 4, //"
    B0, B0, B0, B0, 6, //#x
    B0, B0, B0, B0, 6, //$x
    B10010000, B00100000, B01000000, B10010000, 6, //%
    B0, B0, B0, B0, 6, //&
    B10000000, B10000000, B00000000, B00000000, 2, //'
    B01000000, B10000000, B10000000, B01000000, 3, //(
    B10000000, B01000000, B01000000, B10000000, 3, //)
    B01100000, B01100000, B00000000, B00000000, 4, //*
    B00100000, B01110000, B00100000, B00000000, 5, //+
    B00000000, B00000000, B10000000, B10000000, 2, //,
    B00000000, B11100000, B00000000, B00000000, 4, //-
    B00000000, B00000000, B00000000, B10000000, 3, //.
    B00010000, B00100000, B01000000, B10000000, 6, ///
    B01100000, B10100000, B10100000, B11000000, 5, //0
    B01000000, B11000000, B01000000, B01000000, 4, //1
    B11000000, B00100000, B01000000, B01110000, 5, //2 - This is bad ... needs work!
    B11000000, B00100000, B01100000, B11100000, 5, //3 - Not great!
    B10100000, B10100000, B11100000, B00100000, 5, //4
    B11100000, B01000000, B10100000, B01100000, 5, //5 - Better than 2 or 3
    B10000000, B11000000, B10100000, B01100000, 5, //6
    B11100000, B00100000, B01000000, B01000000, 5, //7
    B11000000, B01000000, B10100000, B01100000, 5, //8 - Meh ... this slant is harder!
    B11000000, B10100000, B01100000, B00100000, 5, //9
    B00000000, B10000000, B00000000, B10000000, 2, //:
    B00000000, B10000000, B00000000, B10000000, 4, //; - Yeah, it's just the ;
    B10000000, B10000000, B01000000, B00100000, 4, //<
    B00000000, 
    B11100000, 
    B00000000, 
    B11100000, 4, //=x
    B10000000, B01000000, B00100000, B00100000, 4, //>
    B11000000, B00100000, B01000000, B01000000, 5, //?
    B0, 
    B0, 
    B0, 
    B0, 6, //@
    B01100000, B10010000, B11110000, B10010000, 5, //A
    B10000000, B11000000, B10100000, B11100000, 4, //B    
    B11000000, B10000000, B10000000, B01100000, 5, //C
    B11000000, B10100000, B10100000, B11000000, 4, //D //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //E
    B11100000, B10000000, B11000000, B10000000, 4, //F
    B01100000, B10000000, B10100000, B01100000, 4, //G - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //H
    B11100000, B01000000, B01000000, B11100000, 4, //I
    B00100000, B00100000, B00100000, B11000000, 5, //J
    B10100000, B11000000, B11000000, B10100000, 4, //K
    B10000000, B10000000, B10000000, B11100000, 4, //L
    B10101000, B11111000, B10001000, B10001000, 6, //M - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //N
    B01100000, B10100000, B10100000, B11000000, 5, //O
    B01100000, B10100000, B11000000, B10000000, 4, //P
    B01100000, B10100000, B10100000, B11110000, 5, //Q
    B11100000, B10100000, B11000000, B10100000, 4, //R - coupld be tweaked I think,
    B01100000, B01010000, B10100000, B01100000, 5, //S
    B11100000, B01000000, B01000000, B01000000, 4, //T
    B10010000, B10010000, B10010000, B01100000, 5, //U
    B10010000, B10100000, B11000000, B10000000, 5, //V
    B10001000, B01001000, B00111000, B00011000, 6, //W
    B10100000, B01100000, B01100000, B01010000, 5, //X
    B10100000, B01100000, B00100000, B00100000, 4, //Y
    B11100000, B00100000, B01000000, B01110000, 5, //Z
    B11000000, B10000000, B10000000, B11000000, 3, //[x
    B10000000, B01000000, B00100000, B00010000, 5, //(Backward Slash)
    B11000000, B01000000, B01000000, B11000000, 3, //]
    B10000000, B11000000, B00000000, B00000000, 3, //^
    B00000000, B00000000, B00000000, B11100000, 4, //_
    B10000000, B10000000, B00000000, B00000000, 3, //`
    B01100000, B10010000, B11110000, B10010000, 5, //a
    B10000000, B11100000, B10100000, B11000000, 4, //b    
    B01100000, B10000000, B10010000, B01100000, 5, //c
    B11000000, B10100000, B10100000, B11000000, 4, //d //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //e
    B11100000, B10000000, B11000000, B10000000, 4, //f
    B01100000, B10000000, B10100000, B01100000, 4, //g - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //h
    B11100000, B01000000, B01000000, B11100000, 4, //i
    B00100000, B00100000, B00100000, B11000000, 5, //j
    B10100000, B11000000, B11000000, B10100000, 4, //k
    B10000000, B10000000, B10000000, B11100000, 4, //l
    B10101000, B11111000, B10001000, B10001000, 6, //m - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //n
    B01100000, B10100000, B10100000, B11000000, 5, //o
    B01100000, B10100000, B11000000, B10000000, 4, //p
    B01100000, B10100000, B10100000, B11110000, 5, //q
    B11100000, B10100000, B11000000, B10100000, 4, //r - coupld be tweaked I think,
    B01100000, B01010000, B10100000, B01100000, 5, //s
    B11100000, B01000000, B01000000, B01000000, 4, //t
    B10010000, B10010000, B10010000, B01100000, 5, //u
    B10010000, B10100000, B11000000, B10000000, 5, //v
    B10000100, B10101000, B11110000, B10100000, 6, //w
    B00101000, B00110000, B01100000, B10100000, 6, //x
    B01010000, B01100000, B01000000, B10000000, 4, //y
    B11110000, B00100000, B01000000, B11110000, 5, //z
    B01100000, B11000000, B01000000, B01100000, 4, //{
    B10000000, B10000000, B10000000, B10000000, 2, //|
    B11000000, B01000000, B01100000, B11000000, 4, //}x
    B11010000, B10110000, B00000000, B00000000, 5, //~x
    B0, B0, B0, B0, 2, // (Char 0x7F)
    B0, B0, B0, B0, 5 // smiley
};


// This is more challenging to see the characters, but way more efficient in terms of code space.
// Note this is more of a 7x4 font than 5x4, but who's counting ?  The kerning value manages it and we have 8 wide on the FLD :)
// AUREBESH IS NOT IMPLEMENTED IN THE 4 HIGH  REAR!
const unsigned char aurabesh5x4l [] PROGMEM = {      //Numeric Font Matrix for Aurabesh, created by TheJugg1er (Arranged as 7x font data + 1x kerning data)
    B00000000, B00000000, B00000000, B00000000, 5, //Space (Char 0x20)
    B10000000, B10000000, B00000000, B10000000, 3, //!
    B10100000, B10100000, B00000000, B00000000, 4, //"
    B0, B0, B0, B0, 6, //#x
    B0, B0, B0, B0, 6, //$x
    B10010000, B00100000, B01000000, B10010000, 6, //%
    B0, B0, B0, B0, 6, //&
    B10000000, B10000000, B00000000, B00000000, 2, //'
    B01000000, B10000000, B10000000, B01000000, 3, //(
    B10000000, B01000000, B01000000, B10000000, 3, //)
    B01100000, B01100000, B00000000, B00000000, 4, //*
    B00100000, B01110000, B00100000, B00000000, 4, //+
    B00000000, B00000000, B01000000, B10000000, 3, //,
    B00000000, B11100000, B00000000, B00000000, 4, //-
    B00000000, B00000000, B00000000, B10000000, 3, //.
    B00010000, B00100000, B01000000, B10000000, 6, ///
    B01100000, B10100000, B10100000, B11000000, 5, //0
    B01000000, B11000000, B01000000, B01000000, 4, //1
    B01100000, B10100000, B01000000, B11100000, 5, //2   
    B01100000, B10110000, B01010000, B00100000, 5, //3
    B10100000, B10100000, B11100000, B00100000, 5, //4
    B01000000, B10110000, B11010000, B00100000, 5, //5
    B01000000, B10110000, B11010000, B01100000, 5, //6
    B11100000, B00100000, B01000000, B01000000, 5, //7
    B01100000, B10110000, B11010000, B01100000, 5, //8
    B01100000, B10100000, B11100000, B00100000, 5, //9
    B00000000, B10000000, B00000000, B10000000, 2, //:
    B00000000, B01000000, B00100000, B01000000, 4, //;
    B00000000, B00100000, B01000000, B11100000, 4, //<
    B00000000, 
    B11100000, 
    B00000000, 
    B11100000, 4, //=x
    B11100000, B01000000, B10000000, B00000000, 4, //>
    B01100000, B10100000, B01100000, B00010000, 5, //?
    B0, 
    B0, 
    B0, 
    B0, 6, //@
    B01100000, B10010000, B11110000, B10010000, 5, //A
    B10000000, B11100000, B10100000, B11000000, 4, //B    
    B01100000, B10000000, B10010000, B01100000, 5, //C
    B11000000, B10100000, B10100000, B11000000, 4, //D //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //E
    B11100000, B10000000, B11000000, B10000000, 4, //F
    B01100000, B10000000, B10100000, B01100000, 4, //G - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //H
    B11100000, B01000000, B01000000, B11100000, 4, //I
    B00100000, B00100000, B00100000, B11000000, 5, //J
    B10100000, B11000000, B11000000, B10100000, 4, //K
    B10000000, B10000000, B10000000, B11100000, 4, //L
    B10101000, B11111000, B10001000, B10001000, 6, //M - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //N
    B01100000, B10100000, B10100000, B11000000, 5, //O
    B01100000, B10100000, B11000000, B10000000, 4, //P
    B01100000, B10100000, B10100000, B11110000, 5, //Q
    B11100000, B10100000, B11000000, B10100000, 4, //R - coupld be tweaked I think,
    B01000000, B10110000, B11010000, B00100000, 5, //S
    B11100000, B01000000, B01000000, B01000000, 4, //T
    B10010000, B10010000, B10010000, B01100000, 5, //U
    B10010000, B10100000, B11000000, B10000000, 5, //V
    B10000100, B10101000, B11110000, B10100000, 6, //W
    B00101000, B00110000, B01100000, B10100000, 6, //X
    B01010000, B01100000, B01000000, B10000000, 4, //Y
    B11110000, B00100000, B01000000, B11110000, 5, //Z
    B11000000, B10000000, B10000000, B11000000, 3, //[x
    B10000000, B10000000, B01000000, B01000000, 3, //(Backward Slash)
    B11000000, B01000000, B01000000, B11000000, 3, //]
    B01000000, B11000000, B00000000, B00000000, 3, //^
    B00000000, B00000000, B00000000, B11100000, 4, //_
    B10000000, B10000000, B00000000, B00000000, 3, //`
    B01100000, B10010000, B11110000, B10010000, 5, //a
    B10000000, B11100000, B10100000, B11000000, 4, //b    
    B01100000, B10000000, B10010000, B01100000, 5, //c
    B11000000, B10100000, B10100000, B11000000, 4, //d //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //e
    B11100000, B10000000, B11000000, B10000000, 4, //f
    B01100000, B10000000, B10100000, B01100000, 4, //g - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //h
    B11100000, B01000000, B01000000, B11100000, 4, //i
    B00100000, B00100000, B00100000, B11000000, 5, //j
    B10100000, B11000000, B11000000, B10100000, 4, //k
    B10000000, B10000000, B10000000, B11100000, 4, //l
    B10101000, B11111000, B10001000, B10001000, 6, //m - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //n
    B01100000, B10100000, B10100000, B11000000, 5, //o
    B01100000, B10100000, B11000000, B10000000, 4, //p
    B01100000, B10100000, B10100000, B11110000, 5, //q
    B11100000, B10100000, B11000000, B10100000, 4, //r - coupld be tweaked I think,
    B01000000, B10110000, B11010000, B00100000, 5, //s
    B11100000, B01000000, B01000000, B01000000, 4, //t
    B10010000, B10010000, B10010000, B01100000, 5, //u
    B10010000, B10100000, B11000000, B10000000, 5, //v
    B10000100, B10101000, B11110000, B10100000, 6, //w
    B00101000, B00110000, B01100000, B10100000, 6, //x
    B01010000, B01100000, B01000000, B10000000, 4, //y
    B11110000, B00100000, B01000000, B11110000, 5, //z
    B01100000, B01000000, B11000000, B01100000, 4, //{
    B10000000, B10000000, B10000000, B10000000, 2, //|
    B11000000, B01100000, B01000000, B11000000, 4, //}x
    B01101000, B10110000, B00000000, B00000000, 5, //~x
    B0, B0, B0, B0, 2, // (Char 0x7F)
    B0, B0, B0, B0, 5 // smiley
};

const unsigned char aurabesh5x4r [] PROGMEM = {      //Numeric Font Matrix for Aurabesh, created by TheJugg1er (Arranged as 7x font data + 1x kerning data)
  // AUREBESH IS NOT IMPLEMENTED IN THE 4 HIGH  REAR!
   B00000000, B00000000, B00000000, B00000000, 5, //Space (Char 0x20)
    B10000000, B10000000, B00000000, B10000000, 3, //!
    B10100000, B10100000, B00000000, B00000000, 4, //"
    B0, B0, B0, B0, 6, //#x
    B0, B0, B0, B0, 6, //$x
    B10010000, B00100000, B01000000, B10010000, 6, //%
    B0, B0, B0, B0, 6, //&
    B10000000, B10000000, B00000000, B00000000, 2, //'
    B01000000, B10000000, B10000000, B01000000, 3, //(
    B10000000, B01000000, B01000000, B10000000, 3, //)
    B01100000, B01100000, B00000000, B00000000, 4, //*
    B00100000, B01110000, B00100000, B00000000, 5, //+
    B00000000, B00000000, B10000000, B10000000, 2, //,
    B00000000, B11100000, B00000000, B00000000, 4, //-
    B00000000, B00000000, B00000000, B10000000, 3, //.
    B00010000, B00100000, B01000000, B10000000, 6, ///
    B01100000, B10100000, B10100000, B11000000, 5, //0
    B01000000, B11000000, B01000000, B01000000, 4, //1
    B11000000, B00100000, B01000000, B01110000, 5, //2 - This is bad ... needs work!
    B11000000, B00100000, B01100000, B11100000, 5, //3 - Not great!
    B10100000, B10100000, B11100000, B00100000, 5, //4
    B11100000, B01000000, B10100000, B01100000, 5, //5 - Better than 2 or 3
    B10000000, B11000000, B10100000, B01100000, 5, //6
    B11100000, B00100000, B01000000, B01000000, 5, //7
    B11000000, B01000000, B10100000, B01100000, 5, //8 - Meh ... this slant is harder!
    B11000000, B10100000, B01100000, B00100000, 5, //9
    B00000000, B10000000, B00000000, B10000000, 2, //:
    B00000000, B10000000, B00000000, B10000000, 4, //; - Yeah, it's just the ;
    B10000000, B10000000, B01000000, B00100000, 4, //<
    B00000000, 
    B11100000, 
    B00000000, 
    B11100000, 4, //=x
    B10000000, B01000000, B00100000, B00100000, 4, //>
    B11000000, B00100000, B01000000, B01000000, 5, //?
    B0, 
    B0, 
    B0, 
    B0, 6, //@
    B01100000, B10010000, B11110000, B10010000, 5, //A
    B10000000, B11000000, B10100000, B11100000, 4, //B    
    B11000000, B10000000, B10000000, B01100000, 5, //C
    B11000000, B10100000, B10100000, B11000000, 4, //D //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //E
    B11100000, B10000000, B11000000, B10000000, 4, //F
    B01100000, B10000000, B10100000, B01100000, 4, //G - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //H
    B11100000, B01000000, B01000000, B11100000, 4, //I
    B00100000, B00100000, B00100000, B11000000, 5, //J
    B10100000, B11000000, B11000000, B10100000, 4, //K
    B10000000, B10000000, B10000000, B11100000, 4, //L
    B10101000, B11111000, B10001000, B10001000, 6, //M - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //N
    B01100000, B10100000, B10100000, B11000000, 5, //O
    B01100000, B10100000, B11000000, B10000000, 4, //P
    B01100000, B10100000, B10100000, B11110000, 5, //Q
    B11100000, B10100000, B11000000, B10100000, 4, //R - coupld be tweaked I think,
    B01100000, B01010000, B10100000, B01100000, 5, //S
    B11100000, B01000000, B01000000, B01000000, 4, //T
    B10010000, B10010000, B10010000, B01100000, 5, //U
    B10010000, B10100000, B11000000, B10000000, 5, //V
    B10001000, B01001000, B00111000, B00011000, 6, //W
    B10100000, B01100000, B01100000, B01010000, 5, //X
    B10100000, B01100000, B00100000, B00100000, 4, //Y
    B11100000, B00100000, B01000000, B01110000, 5, //Z
    B11000000, B10000000, B10000000, B11000000, 3, //[x
    B10000000, B01000000, B00100000, B00010000, 5, //(Backward Slash)
    B11000000, B01000000, B01000000, B11000000, 3, //]
    B10000000, B11000000, B00000000, B00000000, 3, //^
    B00000000, B00000000, B00000000, B11100000, 4, //_
    B10000000, B10000000, B00000000, B00000000, 3, //`
    B01100000, B10010000, B11110000, B10010000, 5, //a
    B10000000, B11100000, B10100000, B11000000, 4, //b    
    B01100000, B10000000, B10010000, B01100000, 5, //c
    B11000000, B10100000, B10100000, B11000000, 4, //d //B11100000, B10100000, B10100000, B11000000, - Not sure ... test this too
    B11100000, B10000000, B11000000, B11100000, 4, //e
    B11100000, B10000000, B11000000, B10000000, 4, //f
    B01100000, B10000000, B10100000, B01100000, 4, //g - Not super happy here.
    B10010000, B10010000, B11110000, B10010000, 5, //h
    B11100000, B01000000, B01000000, B11100000, 4, //i
    B00100000, B00100000, B00100000, B11000000, 5, //j
    B10100000, B11000000, B11000000, B10100000, 4, //k
    B10000000, B10000000, B10000000, B11100000, 4, //l
    B10101000, B11111000, B10001000, B10001000, 6, //m - Might be improved?
    B11001000, B11101000, B10101000, B10011000, 6, //n
    B01100000, B10100000, B10100000, B11000000, 5, //o
    B01100000, B10100000, B11000000, B10000000, 4, //p
    B01100000, B10100000, B10100000, B11110000, 5, //q
    B11100000, B10100000, B11000000, B10100000, 4, //r - coupld be tweaked I think,
    B01000000, B10110000, B11010000, B00100000, 5, //s
    B11100000, B01000000, B01000000, B01000000, 4, //t
    B10010000, B10010000, B10010000, B01100000, 5, //u
    B10010000, B10100000, B11000000, B10000000, 5, //v
    B10000100, B10101000, B11110000, B10100000, 6, //w
    B00101000, B00110000, B01100000, B10100000, 6, //x
    B01010000, B01100000, B01000000, B10000000, 4, //y
    B11110000, B00100000, B01000000, B11110000, 5, //z
    B01100000, B11000000, B01000000, B01100000, 4, //{
    B10000000, B10000000, B10000000, B10000000, 2, //|
    B11000000, B01000000, B01100000, B11000000, 4, //}x
    B11010000, B10110000, B00000000, B00000000, 5, //~x
    B0, B0, B0, B0, 2, // (Char 0x7F)
    B0, B0, B0, B0, 5 // smiley
};
