digraph "AnimatedEvent"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="AnimatedEvent",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for all animated devices."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="AnalogMonitor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAnalogMonitor.html",tooltip="Used for eliminating noise in analogRead inputs without decreasing responsiveness."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="AnimationPlayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAnimationPlayer.html",tooltip="Player of animation scripts."];
  Node1 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ButtonController",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classButtonController.html",tooltip="Controller class for ia-parts.com Dome Button Controller."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ChargeBayIndicator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classChargeBayIndicator.html",tooltip="ChargeBayIndicator (CBI) controller."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="CommandEventSerial\l\< BUFFER_SIZE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCommandEventSerial.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="DataPanel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDataPanel.html",tooltip="DataPanel controller."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="DelayCall",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDelayCall.html",tooltip="Schedules a function to be called at a later time."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="DomeDrive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDomeDrive.html",tooltip="Base template of automatic forwarder from i2c to CommandEvent."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="DomeDrivePWM",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDomeDrivePWM.html",tooltip="Base template of automatic forwarder from i2c to CommandEvent."];
  Node9 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="DomeDriveSabertooth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDomeDriveSabertooth.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="FireStrip",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFireStrip.html",tooltip="Animates electrical sparks and then fire."];
  Node1 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Gripper",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGripper.html",tooltip="Controls a TB662 motor controller to open/close gripper hand."];
  Node1 -> Node14 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="HoloLights",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHoloLights.html",tooltip="Controls the movement and display functions of a single Holoprojector."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="HoloDisplay",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHoloDisplay.html",tooltip="Holo Projector with Adafruit SSD1131 OLED display."];
  Node14 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="HoloOLED",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHoloOLED.html",tooltip=" "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="I2CReceiverBase\< bufferSize \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classI2CReceiverBase.html",tooltip="Base template of automatic forwarder from i2c to CommandEvent."];
  Node1 -> Node18 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="InterchangeArm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classInterchangeArm.html",tooltip="Base class for Zapper, Gripper, and Welder."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="LogicEngineController\l\< kDelayPin, kFadePin,\l kBriPin, kHuePin, kPalPin,\l kFrontJumperPin, kRearJumperPin \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLogicEngineController.html",tooltip="Settings adjust for LogicEngine logics."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node20 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="LogicEngineRenderer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLogicEngineRenderer.html",tooltip="Base class renderer for both front and rear RSeries logics."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="MagicPanelBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMagicPanelBase.html",tooltip="Base class for Magic Panel."];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="MagicPanel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMagicPanel.html",tooltip="Magic Panel by ia-parts.com."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="MarcduinoSerial\< BUFFER\l_SIZE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMarcduinoSerial.html",tooltip=" "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="MicrophoneAmplitude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMicrophoneAmplitude.html",tooltip="Reads a microphone amplitude and makes it available as PeakValueProvider input."];
  Node1 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Orientation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classOrientation.html",tooltip="Encapsulates an Adafruit BNO055 IMU."];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="RelaySwitch",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classRelaySwitch.html",tooltip="Controls a relay."];
  Node26 -> Node27 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="BadMotivator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBadMotivator.html",tooltip="Controls a relay to a smoke machine and some LEDs."];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ResistorLadderButtons\l\< kButtonPin, buttonVal \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classResistorLadderButtons.html",tooltip="Push buttons connected using a resistor ladder."];
  Node1 -> Node29 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ServoDecoder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServoDecoder.html",tooltip=" "];
  Node1 -> Node30 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ServoDispatchDirect\l\< numServos \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServoDispatchDirect.html",tooltip="Implements ServoDispatch dirctly on PWM enabled outputs."];
  Node1 -> Node31 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ServoDispatchPCA9685\l\< numServos, defaultOEValue \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServoDispatchPCA9685.html",tooltip="Implements ServoDispatch over i2c to PCA9685."];
  Node1 -> Node32 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ServoFeedback\< NUM\l_SERVOS \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServoFeedback.html",tooltip="Provides an interface to read analog feedback from a set of servos."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ServoSequencer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServoSequencer.html",tooltip="Plays a sequence of servo commands using a servo group mask."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="SingleStatusLED\< DATA\l_PIN \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSingleStatusLED.html",tooltip="LED status indicator."];
  Node1 -> Node35 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="SoftPot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSoftPot.html",tooltip="Encapsulate a soft potentiometer."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="Stance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStance.html",tooltip="Manages transition from 2 to 3 legged stance using 4 limit switches."];
  Node1 -> Node37 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="StealthController",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStealthController.html",tooltip="Stealth Controller directly attached to the Arduino to read J1/J2 and S1/S2 status header and using a..."];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="TankDrive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTankDrive.html",tooltip="Base template of automatic forwarder from i2c to CommandEvent."];
  Node38 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="TankDrivePWM",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTankDrivePWM.html",tooltip="Base template of automatic forwarder from i2c to CommandEvent."];
  Node38 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="TankDriveRoboteq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTankDriveRoboteq.html",tooltip=" "];
  Node38 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="TankDriveSabertooth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTankDriveSabertooth.html",tooltip=" "];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="TeecesFrontLogics",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTeecesFrontLogics.html",tooltip="Teeces Front Logics Device."];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="TeecesPSI",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTeecesPSI.html",tooltip="Process State Indicator."];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="TeecesRearLogics",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTeecesRearLogics.html",tooltip="Teeces Rear Logics Device."];
  Node1 -> Node45 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="Welder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classWelder.html",tooltip="Controls a relay to a spark gap igniter to create some actual sparking."];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="WifiAccess",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classWifiAccess.html",tooltip=" "];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="WifiMarcduinoReceiverBase\l\< maxClients, BUFFER_SIZE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classWifiMarcduinoReceiverBase.html",tooltip="Base template of Marcduino receiver over WiFi."];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="WifiSerialBridgeBase\l\< maxClients \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classWifiSerialBridgeBase.html",tooltip="Base template of automatic forwarder from i2c to CommandEvent."];
  Node1 -> Node49 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="Zapper",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classZapper.html",tooltip="Controls a relay to a spark gap igniter to create some actual sparking."];
}
