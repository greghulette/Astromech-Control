namespace Reeltwo {

/** \reeltwoManualPage I2C I2C

\reeltwoAutoToc

I2C

*/

/** \reeltwoManualPage I2CTargets I2C Targets

\reeltwoAutoToc

I2C Targets

*/

/** \reeltwoManualPage MagicPanelI2C Magic Panel (i2c)

\reeltwoAutoToc

Control ia-parts Magic Panel via i2c.

You can create an instance of this class to control the actions of an ia-parts Magic Panel.

\code
#include "i2c/MagicPanelI2C.h"

MagicPanelI2C magicPanel;

\endcode

*/

/** \reeltwoManualPage PeriscopeI2C Periscope (i2c)

\reeltwoAutoToc

Control ia-parts Periscope via i2c.

You can create an instance of this class to control the actions of an ia-parts periscope lifter and light kit.

\code
#include "i2c/PeriscopeI2C.h"

PeriscopeI2C periscope;

\endcode

*/

/** \reeltwoManualPage ReceiverI2C I2C Receiver

\reeltwoAutoToc

Automatic forwarder from i2c to CommandEvent.

Create an instance of template I2CReceiverBase to automatically forward i2c string commands to CommandEvent.
A convenience type of I2CReceiver is provided that uses the default buffer size of 32 bytes. Only
a single instance of I2CReceiver should be created per sketch.

\code
#include "i2c/I2CReceiver.h"

I2CReceiver i2cReceiver(0x19);
\endcode

*/

/** \reeltwoManualPage StealthBoardI2C Stealth Board (i2c)

\reeltwoAutoToc

Control SureRobotics Stealth Board via i2c.

You can create an instance of this class to control the actions of an SureRobotics Stealth Board.

\code
#include "i2c/StealthBoard.h"

StealthBoard stealthBoard(0);

\endcode

*/

}

